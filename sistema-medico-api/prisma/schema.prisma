// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Cargo {
  ATENDENTE
  ADMIN
}

enum Especialidade {
  CARDIOLOGISTA
  CLINICO_GERAL
  DERMATOLOGISTA
  ENDOCRINOLOGISTA
  GINECOLOGISTA
  NEUROLOGISTA
  OFTALMOLOGISTA
  ORTOPEDISTA
  OTORRINOLARINGOLOGISTA
  PEDIATRA
  PSIQUIATRA
  UROLOGISTA
}

enum Status {
  AGENDADA
  ADIADA
  CANCELADA
  REALIZADA
}

// adicionar model User, abstraindo infos comuns de Medico e Paciente, adicionando autenticação
model Medico {
  id        Int      @id @default(autoincrement())
  nome      String
  cpf       String
  crm       String
  especialidade String
  dataNascimento DateTime
  observacoes String
  consultas Consulta[]
}

model Paciente {
  id        Int      @id @default(autoincrement())
  nome      String
  cpf       String
  dataNascimento DateTime
  endereco  String
  observacoes String
  consultas Consulta[]
}

model Consulta {
  id           Int        @id @default(autoincrement())
  data         DateTime
  status       Status
  especialidade Especialidade
  observacoes   String
  medico       Medico     @relation(fields: [medicoId], references: [id])
  medicoId     Int
  paciente     Paciente   @relation(fields: [pacienteId], references: [id])
  pacienteId   Int
  funcionario  Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId Int
}


model Funcionario {
  id        Int      @id @default(autoincrement())
  nome      String
  cpf       String
  dataNascimento DateTime
  dataAdmissao DateTime
  endereco  String
  cargo    Cargo

  Consulta Consulta[]
}